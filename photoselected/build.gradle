apply plugin: 'com.android.library'
//apply plugin: 'maven-publish'
apply plugin: 'maven'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    PUBLISH_GROUP_ID = "${PUBLISH_GROUP_ID}"
    PUBLISH_ARTIFACT_ID = "${PUBLISH_ARTIFACT_ID}"
    PUBLISH_VERSION = android.defaultConfig.versionName
}

//上传文档配置
uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(getProperty('aar.path'))
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.facebook.fresco:fresco:1.8.1'
    implementation 'com.facebook.fresco:animated-gif:1.8.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'top.zibin:Luban:1.1.3'
    implementation 'me.relex:photodraweeview:1.1.2'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

/*publishing {
    publications {
        aar(MavenPublication) {
            groupId 'com.wg.photo'//包名
            artifactId 'selected'
            version '1.0.0'//版本
            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/${project.getName()}-debug.aar")
            //同时记录该依赖库所依赖的其他远程依赖
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    if (it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            //仓库存放在项目根目录
            url("file://" + project.rootDir.absolutePath + "/repository")
        }
    }
}*/
